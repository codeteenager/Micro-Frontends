import{_ as s,v as a,b as n,R as l}from"./chunks/framework.c16e5371.js";const p="/Micro-Frontends/application/qiankun/3.png",b=JSON.parse('{"title":"qiankun进阶","description":"","frontmatter":{},"headers":[],"relativePath":"guide/qiankun-solution.md","filePath":"guide/qiankun-solution.md","lastUpdated":1691730856000}'),o={name:"guide/qiankun-solution.md"},e=l('<h1 id="qiankun进阶" tabindex="-1">qiankun进阶 <a class="header-anchor" href="#qiankun进阶" aria-label="Permalink to &quot;qiankun进阶&quot;">​</a></h1><p><img src="'+p+`" alt=""> 对于qiankun框架来说已经提供了很多微前端的基础能力，但是在中后台管理系统复杂场景的也有很多，这时候就需要qiankun提供一些进阶的能力来帮助开发者去更好的开发。</p><h2 id="提取公共库" tabindex="-1">提取公共库 <a class="header-anchor" href="#提取公共库" aria-label="Permalink to &quot;提取公共库&quot;">​</a></h2><p>提取公共依赖可以参考：<a href="https://blog.csdn.net/Lyrelion/article/details/124896392" target="_blank" rel="noreferrer">qiankun 如何提取出公共的依赖库</a></p><ul><li>qiankun不建议共享依赖，担心原型链污染等问题。 single-spa推荐共享大型依赖，需要小心处理污染问题，它们都是推荐使用webpack的external来共享依赖库。</li><li>我们也推荐共享大的公共依赖，也是使用webpack的external来共享依赖库，不过是每个子应用加载时都重复再加载一次库，相当于节省了相同库的下载时间，也保证了不同子应用间不会产生原型链污染，属于折中的方案。</li></ul><h2 id="页签切换优化-keep-alive" tabindex="-1">页签切换优化(keep-alive) <a class="header-anchor" href="#页签切换优化-keep-alive" aria-label="Permalink to &quot;页签切换优化(keep-alive)&quot;">​</a></h2><p>在经典的后端管理系统中，打开一个新页面都会对应打开一个页签，切换回上一个打开的页签并保留原页签的缓存能力是较常见的需求。但qiankun方案在自动匹配加载一个子应用时，会卸载上一个子应用，原本的数据也会丢失，无法实现缓存。对于此问题，我们将基于路由自动匹配加载微应用的方式改为调用api手动加载，同时缓存子应用实例及页面，完美解决页签切换过程中数据丢失问题。</p><h2 id="本地缓存封装" tabindex="-1">本地缓存封装 <a class="header-anchor" href="#本地缓存封装" aria-label="Permalink to &quot;本地缓存封装&quot;">​</a></h2><p>在qiankun微前端技术方案中，各微应用浏览器的本地存储状态是共享的，存在各个业务微应用本地缓存的key值同名隐患，容易引起各业务微应用操作本地存储时数据覆盖、误删除等问题。为了解决这个问题，我们使用代理模式对浏览器本地缓存进行处理，同时新增缓存api，默认为业务微应用统一加上应用唯一标识作为本地存储的key 值前缀，避免同名问题。</p><h2 id="应用通信扩展" tabindex="-1">应用通信扩展 <a class="header-anchor" href="#应用通信扩展" aria-label="Permalink to &quot;应用通信扩展&quot;">​</a></h2><p>qiankun微前端自带的一个实现全局通信的api是initGlobalState，使用不够灵活，在微应用中只能修改已存在的一级属性，并且qiankun会在下一个大版本移除此api。针对此情况，可以扩展新的通信方式，一是通过vuex的方式，在基座主应用维护一个全局的common模块，下发到子应用中，作为各应用可访问的公共状态，实现数据共享；二是使用eventBus的方式，在基座主应用定义并下发eventBus实例，通过发布订阅者模式实现各应用间事件的通信。以上两种方式可以较好的实现项目开发中各种数据通信需求。</p><h2 id="子应用嵌套" tabindex="-1">子应用嵌套 <a class="header-anchor" href="#子应用嵌套" aria-label="Permalink to &quot;子应用嵌套&quot;">​</a></h2><p>子应用嵌套即子应用可以嵌入其它子应用，首先它存在的问题是子项目无法根据已有信息判断是独立运行还是被集成。</p><p>在qiankun中子应用是可以独立运行的，运行后登录页、Layout基础模块包括菜单、注销，还能正常开发和使用。这个时候就需要把登录页、Layout、App三个模块迁移到common模块，通过引入的方式，然后根据window.__POWERED_BY_QIANKUN__判断当前运行环境是否独立运行做相对应的逻辑处理。</p><p>它提供了环境变量：</p><ul><li><code>window.__POWERED_BY_QIANKUN__</code>为true, 一起运行</li><li><code>window.__POWERED_BY_QIANKUN__</code>为false, 独立运行</li></ul><p>由于子项目本身也是一个qiankun 项目，所以独立运行时 window.POWERED_BY_QIANKUN 为 true，被集成时，还是 true。这时候解决办法就是在主项目的入口文件另外定义一个全局变量window.POWERED_BY_QIANKUN_PARENT = true;，用这个变量来区分是被集成还是独立运行。</p><h2 id="子应用并行" tabindex="-1">子应用并行 <a class="header-anchor" href="#子应用并行" aria-label="Permalink to &quot;子应用并行&quot;">​</a></h2><p>子应用并行即子应用同时展示，将当前子应用放到另外一个子应用进行展示，同时展示多次，可能是同一个页面，也可能是不同的页面。</p><p>调用qiankun的start方法开启多实例，路由匹配规则activeRule配置上多个应用，则会同时激活，注意子应用并行需要挂在主应用不同id位置。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">registerMicroApps</span><span style="color:#BABED8;">([</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react-sub</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 应用名称</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">//localhost:3000</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 应用地址</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">container</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#subContainer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 嵌入主应用位置</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">activeRule</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/sub1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 匹配规则</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react-sub2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">//localhost:3002</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">container</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#subContainer2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#F07178;">activeRule</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/sub1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">start</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">singular</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,21),t=[e];function r(c,i,D,u,y,F){return a(),n("div",null,t)}const d=s(o,[["render",r]]);export{b as __pageData,d as default};
