import{_ as e,o as t,c as a}from"./chunks/framework.ad12490d.js";const p=JSON.parse('{"title":"微前端","titleTemplate":"技术解析与实践","description":"","frontmatter":{"layout":"home","title":"微前端","titleTemplate":"技术解析与实践","hero":{"name":"微前端","text":"技术解析与实践","tagline":"从入门到放弃","image":{"src":"/home-logo.png","alt":"qiankun"},"actions":[{"theme":"brand","text":"开始","link":"/guide/introduction"}]},"features":[{"icon":"💡","title":"技术栈无关","details":"主框架不限制接入应用的技术栈，微应用具备完全自主权"},{"icon":"📦","title":"独立运行、独立开发、独立部署","details":"微应用仓库独立，前后端可独立开发，部署完成后主框架自动完成同步更新"},{"icon":"🛠️","title":"增量升级","details":"在面对各种复杂场景时，我们通常很难对一个已经存在的系统做全量的技术栈升级或重构，而微前端是一种非常好的实施渐进式重构的手段和策略"}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1690454090000}'),i={name:"index.md"};function n(o,l,r,s,d,c){return t(),a("div")}const _=e(i,[["render",n]]);export{p as __pageData,_ as default};
