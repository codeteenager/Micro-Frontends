import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.ad12490d.js";const d=JSON.parse('{"title":"qiankun落地问题","description":"","frontmatter":{},"headers":[],"relativePath":"guide/qiankun-problem.md","filePath":"guide/qiankun-problem.md","lastUpdated":1698131359000}'),p={name:"guide/qiankun-problem.md"},e=l(`<h1 id="qiankun落地问题" tabindex="-1">qiankun落地问题 <a class="header-anchor" href="#qiankun落地问题" aria-label="Permalink to &quot;qiankun落地问题&quot;">​</a></h1><h2 id="css-隔离" tabindex="-1">CSS 隔离 <a class="header-anchor" href="#css-隔离" aria-label="Permalink to &quot;CSS 隔离&quot;">​</a></h2><p>qiankun 加载子项目 css 样式机制大体为：挂载子应用时将子应用的 css 样式以 style 标签的形式插入并做快照，卸载子应用时再将快照内的 style 样式删除。</p><p>所以在加载子应用期间，若未开启 css 沙箱隔离，后加载的这些样式，可能会对整个系统的样式产生影响，对此，qiankun 提供了两种 css 沙箱功能，可以将子应用的样式包裹在沙箱容器内部，以此来达到样式隔离的目的。</p><h3 id="qiankun-严格沙箱" tabindex="-1">qiankun 严格沙箱 <a class="header-anchor" href="#qiankun-严格沙箱" aria-label="Permalink to &quot;qiankun 严格沙箱&quot;">​</a></h3><p>在加载子应用时，添加 strictStyleIsolation: true 属性，实现形式为将整个子应用放到 Shadow DOM 内进行嵌入，完全隔离了主子应用</p><p>缺点：</p><ul><li>子应用的弹窗、抽屉、popover 因找不到主应用的 body 会丢失，或跑到整个屏幕外</li><li>主应用不方便去修改子应用的样式</li></ul><h3 id="实验性沙箱" tabindex="-1">实验性沙箱 <a class="header-anchor" href="#实验性沙箱" aria-label="Permalink to &quot;实验性沙箱&quot;">​</a></h3><p>在加载子应用时，添加 experimentalStyleIsolation: true 属性，实现形式类似于 vue 中 style 标签中的 scoped 属性，qiankun 会自动为子应用所有的样式增加后缀标签，如：div[data-qiankun-microName]</p><p>缺点：</p><ul><li>子应用的弹窗、抽屉、popover因插入到了主应用的body，所以导致样式丢失或应用了主应用了样式。例如 elementUI 的 Popover 弹出框、Dropdown 下拉菜单、嵌套的 Drawer 、嵌套的 dialog 等</li></ul><p>找到根本的原因，其实就好解决了。</p><p>在乾坤出现之前，饿了么组件就已经用的很多了，但是当时的组件设计师们，也没有考虑到后续会有这种微前端集成的需求，再加上现在组件维护不及时，所以就导致现在网上流行说的这些坑。例如 antd 下通过 ConfigProvider getPopupContainer 指定弹框渲染的范围，这样就解决了上面说的逃逸问题。</p><p>或者重写了子应用的 document.body.appendChild，让dialog挂载到子应用的节点中，如果有多应用保活，重写后的appendChild会导致其他子应用也挂载到重写的那个子应用中，导致其他子应用出现dialog消失的问题。</p><h3 id="使用-postcss-selector-namespace" tabindex="-1">使用 postcss-selector-namespace <a class="header-anchor" href="#使用-postcss-selector-namespace" aria-label="Permalink to &quot;使用 postcss-selector-namespace&quot;">​</a></h3><p>在子应用中，配置 postcss 插件，给子应用添加类前缀：</p><p>例如在vue.config.js中添加</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">selectorNamespace</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;postcss-selector-namespace&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">css</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">loaderOptions</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">postcss</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">postcssOptions</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">plugins</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">selectorNamespace</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#B392F0;">namespace</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">css</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;================postcss==============&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(css);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">/* 无需添加的样式 */</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (css.</span><span style="color:#B392F0;">includes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;element-variables.scss&quot;</span><span style="color:#E1E4E8;">)) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;.vue2-app&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">              }</span></span>
<span class="line"><span style="color:#E1E4E8;">            })</span></span>
<span class="line"><span style="color:#E1E4E8;">          ]</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">selectorNamespace</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;postcss-selector-namespace&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">css</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">loaderOptions</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">postcss</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">postcssOptions</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">plugins</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">selectorNamespace</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#6F42C1;">namespace</span><span style="color:#24292E;">(</span><span style="color:#E36209;">css</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;================postcss==============&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(css);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">/* 无需添加的样式 */</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (css.</span><span style="color:#6F42C1;">includes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;element-variables.scss&quot;</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;.vue2-app&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">              }</span></span>
<span class="line"><span style="color:#24292E;">            })</span></span>
<span class="line"><span style="color:#24292E;">          ]</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>或者在postcss.config.js中</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;plugins&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 为微前端模块添加样式前缀，避免与其他应用冲突</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;postcss-selector-namespace&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">namespace</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;.vue2-app&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;plugins&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 为微前端模块添加样式前缀，避免与其他应用冲突</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;postcss-selector-namespace&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">namespace</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.vue2-app&#39;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>记得在子应用根节点中加入与之匹配的样式前缀。</p></blockquote><p>还是会存在上面插入 body 中的样式没有成功的问题，需要特殊处理。</p><h2 id="element-ui和element-plus样式影响问题" tabindex="-1">element-ui和element-plus样式影响问题 <a class="header-anchor" href="#element-ui和element-plus样式影响问题" aria-label="Permalink to &quot;element-ui和element-plus样式影响问题&quot;">​</a></h2><p>主应用用element-plus，子应用用element-ui，导致样式发生变形。由于element-ui和element-plus前缀相同、命名规则相同，但内部部分样式实现方式不同，从而导致使用element-ui的样式会被污染，页面样式混乱</p><p>解决方案是写一个webpack loader替换element-ui class前缀，写一个postcss plugin替换样式前缀。</p><ol><li><p>npm i change-prefix-loader postcss-change-css-prefix -D</p></li><li><p>在vue.config.js中添加如下代码</p></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">chainWebpack</span><span style="color:#E1E4E8;">(config){</span></span>
<span class="line"><span style="color:#E1E4E8;">    config.module</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">rule</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;change-prefix&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\.</span><span style="color:#DBEDFF;">js</span><span style="color:#F97583;">$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    .include.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(__dirname,</span><span style="color:#9ECBFF;">&#39;./node_modules/element-ui/lib&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">end</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;change-prefix&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">loader</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;change-prefix-loader&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">options</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      prefix:</span><span style="color:#9ECBFF;">&#39;el-&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      replace: </span><span style="color:#9ECBFF;">&#39;portal-&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">chainWebpack</span><span style="color:#24292E;">(config){</span></span>
<span class="line"><span style="color:#24292E;">    config.module</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">rule</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;change-prefix&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#22863A;font-weight:bold;">\\.</span><span style="color:#032F62;">js</span><span style="color:#D73A49;">$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .include.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(__dirname,</span><span style="color:#032F62;">&#39;./node_modules/element-ui/lib&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">end</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;change-prefix&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">loader</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;change-prefix-loader&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">options</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      prefix:</span><span style="color:#032F62;">&#39;el-&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      replace: </span><span style="color:#032F62;">&#39;portal-&#39;</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>3.新建postcss.config.js文件</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">addCssPrefix</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;postcss-change-css-prefix&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">addCssPrefix</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      prefix: </span><span style="color:#9ECBFF;">&#39;el-&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      replace: </span><span style="color:#9ECBFF;">&#39;portal-&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    }),</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">addCssPrefix</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;postcss-change-css-prefix&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  plugins: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">addCssPrefix</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      prefix: </span><span style="color:#032F62;">&#39;el-&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      replace: </span><span style="color:#032F62;">&#39;portal-&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    }),</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>来自：<a href="https://blog.csdn.net/weixin_45952434/article/details/129784387" target="_blank" rel="noreferrer">记录elementui增加样式前缀</a> 其他方案：<a href="https://blog.csdn.net/weixin_42606371/article/details/126265093" target="_blank" rel="noreferrer">微前端（qiankun）子应用样式影响其他应用样式</a></p></blockquote>`,31),o=[e];function c(r,t,E,i,y,u){return n(),a("div",null,o)}const m=s(p,[["render",c]]);export{d as __pageData,m as default};
